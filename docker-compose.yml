version: '3.8'

services:
  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: arcsat-api
    restart: unless-stopped
    ports:
      - "${PORT:-5500}:5500"
    environment:
      - NODE_ENV=production
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=5500
    volumes:
      - ./logs:/app/logs
    networks:
      - arcsat-network
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5500"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB (para desenvolvimento local)
  mongodb:
    image: mongo:7
    container_name: arcsat-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
      - MONGO_INITDB_DATABASE=arcsat
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - arcsat-network

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend/arcsat-landing
      dockerfile: Dockerfile
    container_name: arcsat-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:5500/api/v1
    networks:
      - arcsat-network
    depends_on:
      - api

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: arcsat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - arcsat-network
    depends_on:
      - api
      - frontend

networks:
  arcsat-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
